/*
A simple little SCSS mixin for creating scrim gradients
Inspired by Andreas Larson - https://github.com/larsenwork
https://css-tricks.com/easing-linear-gradients/
*/

@mixin scrimGradient($startColor: $color-black, $direction: 'to bottom') {
	$scrimCoordinates: (
		0: 1,
		19: 0.738,
		34: 0.541,
		47: 0.382,
		56.5: 0.278,
		65: 0.194,
		73: 0.126,
		80.2: 0.075,
		86.1: 0.042,
		91: 0.021,
		95.2: 0.008,
		98.2: 0.002,
		100: 0,
	);

	$hue: hue($startColor);
	$saturation: saturation($startColor);
	$lightness: lightness($startColor);
	$stops: ();

	@each $colorStop, $alphaValue in $scrimCoordinates {
		$stop: hsla($hue, $saturation, $lightness, $alphaValue)
			percentage(calc($colorStop/100));
		$stops: append($stops, $stop, comma);
	}

	background: linear-gradient(unquote($direction), $stops);
}

// Replace letters
@function str-replace($string, $search, $replace: '') {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace +
			str-replace(
				str-slice($string, $index + str-length($search)),
				$search,
				$replace
			);
	}

	@return $string;
}

// Encode symbols
@function url-encode($string) {
	$map: (
		'%': '%25',
		'<': '%3C',
		'>': '%3E',
		' ': '%20',
		'!': '%21',
		'*': '%2A',
		"'": '%27',
		'"': '%22',
		'(': '%28',
		')': '%29',
		';': '%3B',
		':': '%3A',
		'@': '%40',
		'&': '%26',
		'=': '%3D',
		'+': '%2B',
		'$': '%24',
		',': '%2C',
		'/': '%2F',
		'?': '%3F',
		'#': '%23',
		'[': '%5B',
		']': '%5D',
	);

	$new: $string;

	@each $search, $replace in $map {
		$new: str-replace($new, $search, $replace);
	}

	@return $new;
}

// Format the SVG as a URL
@function inline-svg($string) {
	@return url('data:image/svg+xml,#{url-encode($string)}');
}

//bigpicture
#bp_container {
	img[src$='.png'] {
		background-color: #fff;
	}
}

//Tiny Slider
.tns-nav {
	position: absolute;
	bottom: 12px;
	left: 0;
	right: 0;
	text-align: center;
	z-index: 1;
	button {
		border: 0;
		padding: 6px;
		border-radius: 50%;
		margin: 0 4px;
		transition: background-color 0.3s ease-in-out;
		&:hover {
			background-color: lighten($color-primary, 50%);
		}
	}
	button.tns-nav-active {
		background-color: $color-primary;
	}
}
.tns-controls {
	position: absolute;
	top: 20px;
	z-index: 1;
	opacity: 0;
	width: 100%;
	height: 100%;
	display: flex;
	justify-content: space-between;
	align-items: center;
	pointer-events: none;
	transition: top 0.3s ease-in-out, opacity 0.3s ease-in-out;
	button[data-controls='prev'],
	button[data-controls='next'] {
		position: absolute;
		border: 0;
		outline: 0;
		background-color: transparent;
		pointer-events: initial;
		transition: transform 0.3s ease-in-out;
		svg {
			height: 30px;
			width: 30px;
			opacity: 1;
			fill: #eee;
			// transition: opacity 0.3s ease-in-out;
		}
		// &:hover {
		// 	svg {
		// 		opacity: 1;
		// 	}
		// }
	}
	button[data-controls='next'] {
		right: 0;
		&:hover {
			transform: translateX(2px);
		}
	}
	button[data-controls='prev'] {
		left: 0;
		&:hover {
			transform: translateX(-2px);
		}
	}
}
.tns-visually-hidden {
	display: none;
}
